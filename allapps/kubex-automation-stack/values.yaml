#################################################################
# densify/container-optimization-data-forwarder parameters
#################################################################

container-optimization-data-forwarder:
  nameOverride: kubex-stack
  job:
    checkPrometheusReady: true
  config:
    forwarder:
      densify:
        url:
          UserSecretName: densify-api-secret
    prometheus:
      url:
        host: kubex-prometheus-server
        port: 80

#################################################################
# prometheus-community/prometheus parameters
#################################################################

prometheus:
  alertmanager:
    enabled: false 
  prometheus-pushgateway:
    enabled: false 
  kube-state-metrics:
    metricAnnotationsAllowList:
      - 'namespaces=[*]'
    metricLabelsAllowlist:
      - 'nodes=[*]'
      - 'namespaces=[*]'
      - 'pods=[*]'
      - 'deployments=[*]'
      - 'replicasets=[*]'
      - 'daemonsets=[*]'
      - 'statefulsets=[*]'
      - 'jobs=[*]'
      - 'cronjobs=[*]'
      - 'horizontalpodautoscalers=[*]'
    collectors:
      - cronjobs
      - daemonsets
      - deployments
      - horizontalpodautoscalers
      - jobs
      - namespaces
      - nodes
      - poddisruptionbudgets
      - pods
      - replicasets
      - replicationcontrollers
      - resourcequotas
      - statefulsets
  prometheus-node-exporter:
    service:
      port: 9191
      targetPort: 9191
  server:
    fullnameOverride: kubex-prometheus-server
    global:
      scrape_interval: 20s
      scrape_timeout: 10s
    persistentVolume:
      size: 50Gi
    retention: "2d"
    retentionSize: "40GiB"
  serverFiles:
    prometheus.yml:
      rule_files:
        - /etc/config/recording_rules.yml
        - /etc/config/alerting_rules.yml
        - /etc/config/rules
        - /etc/config/alerts
      scrape_configs:
        - job_name: 'prometheus'
          static_configs:
            - targets: ['localhost:9090']

        - job_name: 'kubernetes-apiservers'
          kubernetes_sd_configs:
            - role: endpoints
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: default;kubernetes;https

        - job_name: 'kubernetes-nodes'
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/$1/proxy/metrics

        - job_name: 'kubernetes-cadvisor'
          scheme: https
          tls_config:
            ca_file: /va_
